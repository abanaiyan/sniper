#include nehalem

[perf_model/core]
frequency = 2.66

[perf_model/cache]
levels = 2

[perf_model/l1_icache]
perfect = false
cache_size = 32
associativity = 4
address_hash = mask
replacement_policy = lru
data_access_time = 4
tags_access_time = 1
perf_model_type = parallel
writethrough = 0
shared_cores = 1

[perf_model/l1_dcache]
perfect = false
cache_size = 32
associativity = 4
address_hash = mask
replacement_policy = lru
data_access_time = 4
tags_access_time = 1
perf_model_type = parallel
writethrough = 0
shared_cores = 1

[perf_model/l2_cache]
cache_size = 32
associativity = 4
data_access_time = 0
tags_access_time = 0

[perf_model/nuca]
enabled = true
cache_size = 1024       # In KB
associativity = 16
address_hash = mask
replacement_policy = lru
tags_access_time = 3    # In cycles
data_access_time = 12   # In cycles, parallel with tag access
bandwidth = 64          # In GB/s

[perf_model/nuca/queue_model]
enabled = true
type = history_list

[perf_model/dram_directory]
locations = llc
total_entries = 1048576
associativity = 16
directory_type = full_map
home_lookup_param = 6             # log2 of the interleaving

[perf_model/dram]
num_controllers = -1
controllers_interleaving = 4
latency = 45
per_controller_bandwidth = 7.6              # In GB/s, as measured by core_validation-dram
chips_per_dimm = 8
dimms_per_controller = 4

[network]
memory_model_1 = emesh_hop_by_hop

[network/emesh_hop_by_hop]
hop_latency = 2            # Per-hop latency in core cycles
link_bandwidth = 64        # Per-link, per-direction bandwidth in bits/cycle
dimensions = 2             # Mesh dimensions (1 for line/ring, 2 for mesh/torus)
#size = 4:4
wrap_around = false        # Has wrap-around links? (false for line/mesh, true for ring/torus)
concentration = 1          # Number of cores per network interface (must be >= last-level-cache/shared_cores)


[fault_generation]
enabled = true

[codec]
enabled = false

[write_skip]
enabled = false
